#!/bin/bash

DEFAULT_MACHINE=genericx86-64
DEFAULT_DISTRO=tstick

thisdir=$(pwd)

if [[ ! -d $thisdir/meta-towelstick ]]; then
    echo "meta-towelstick not found!"
    echo "please source this script from the workspace root"
    return 1
fi
TSROOT=$(readlink -f $thisdir)
unset thisdir

if [[ -n $MACHINE ]]; then
    echo "MACHINE set to $MACHINE"
else
    echo "No MACHINE given, defaulting to $DEFAULT_MACHINE"
    MACHINE=$DEFAULT_MACHINE
fi
unset DEFAULT_MACHINE

if [[ -n $DISTRO ]]; then
    echo "DISTRO set to $DISTRO"
else
    echo "No DISTRO set, defaulting to $DEFAULT_DISTRO"
    DISTRO=$DEFAULT_DISTRO
fi
unset DEFAULT_DISTRO

if [[ -n $1 ]]; then
    BUILD_DIR="$1"
else
    BUILD_DIR="build-$MACHINE"
fi
echo "Using BUILD_DIR $BUILD_DIR"

DOWNLOAD_DIR=/var/cache/$USER/oe-downloads
if [[ ! -d ./downloads ]] && [[ -d $DOWNLOAD_DIR ]]; then
    echo "symlinking downloads to $DOWNLOAD_DIR"
    ln -s $DOWNLOAD_DIR downloads
fi
unset DOWNLOAD_DIR

if ( ! git -C openembedded-core symbolic-ref HEAD &>/dev/null ) && \
        [[ -x meta-wild-common/yocto-patches/apply-patches.sh ]]; then
    echo -ne "\nopenembedded-core is in a detached HEAD. Apply patches from meta-wild-common? (Y/n) "
    read _apply_patch_answer
    if [[ -z $_apply_patch_answer ]] || [[ $_apply_patch_answer == [yY]* ]]; then
        meta-wild-common/yocto-patches/apply-patches.sh
    fi
fi

# oe-buildenv-internal will fail if the default python is python3
# it's unsupported, but it actually works, so do some trickery
if /usr/bin/env python --version 2>&1 | grep -q "Python 3"; then
    pytmpdir=$(mktemp -d)
    if [[ -d $pytmpdir ]]; then
        ln -s $(which python2) $pytmpdir/python
        export PATH="$pytmpdir:$PATH"
    fi
fi

export TEMPLATECONF="$TSROOT/meta-towelstick/conf"
source openembedded-core/oe-init-build-env $BUILD_DIR
unset TEMPLATECONF

# clean up PATH if we changed it earlier
if [[ -d $pytmpdir ]]; then
    export PATH="$(sed "s|${pytmpdir}:||" <<<"$PATH")"
    rm -rf $pytmpdir
    unset pytmpdir
fi

# now we're in the build directory and should have bblayers.conf and local.conf
BB_CONF="conf/bblayers.conf"
LOCAL_CONF="conf/local.conf"

SUBST_VARS=(MACHINE DISTRO TSROOT)
for var in "${SUBST_VARS[@]}"; do
    eval value=\$$var
    sed -i "s|@${var}@|${value}|g" $BB_CONF $LOCAL_CONF
done
unset BB_CONF LOCAL_CONF var value SUBST_VARS _apply_patch_answer
